<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dtLogin" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_ProcessRun" Type="InArgument(x:String)" />
    <x:Property Name="in_PaidDate" Type="InArgument(x:String)" />
    <x:Property Name="in_ESOBatchDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_PayorMapping" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_OutputFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_ESOFileSelectedPath" Type="InArgument(x:String)" />
    <x:Property Name="in_dtRecords" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1014,920</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="84">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " sap:VirtualizedContainerService.HintSize="1024,855" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="strAvailityUsername" />
      <Variable x:TypeArguments="sd:DataRow" Name="dr_AvailityDetails" />
      <Variable x:TypeArguments="sd:DataRow" Name="dr_ESODetails" />
      <Variable x:TypeArguments="x:String" Name="strESOPassword" />
      <Variable x:TypeArguments="x:String" Name="strESOUsername" />
      <Variable x:TypeArguments="x:String" Name="strAvailityPassword" />
      <Variable x:TypeArguments="x:String" Name="strAvailityURL" />
      <Variable x:TypeArguments="x:String" Name="strESOPath" />
      <Variable x:TypeArguments="x:String" Name="strToBasePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtOutput" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtOutputFormat" />
      <Variable x:TypeArguments="x:Boolean" Name="boolExitLoop" />
      <Variable x:TypeArguments="x:Int32" Name="intRetryCounter" />
      <Variable x:TypeArguments="sd:DataRow" Name="drClientDetails" />
      <Variable x:TypeArguments="x:String" Name="getSearchCriteria" />
      <Variable x:TypeArguments="x:Int32" Name="excelRowCount" />
      <Variable x:TypeArguments="x:String" Name="outSubID" />
      <Variable x:TypeArguments="x:String" Name="outGrpNum" />
      <Variable x:TypeArguments="x:String" Name="outStatus" />
      <Variable x:TypeArguments="x:String" Name="outDOB" />
      <Variable x:TypeArguments="x:String" Name="outGender" />
      <Variable x:TypeArguments="x:String" Name="outAddress" />
      <Variable x:TypeArguments="x:String" Name="outSub" />
      <Variable x:TypeArguments="x:String" Name="outRelatSub" />
      <Variable x:TypeArguments="x:String" Name="outPtName" />
      <Variable x:TypeArguments="x:String" Name="outInsType" />
      <Variable x:TypeArguments="x:String" Name="outInsStatus" />
      <Variable x:TypeArguments="x:String" Name="outContPayer" />
      <Variable x:TypeArguments="x:String" Name="outContPayerInsType" />
      <Variable x:TypeArguments="x:String" Name="outContMemID" />
      <Variable x:TypeArguments="x:String" Name="outContPayerNote" />
      <Variable x:TypeArguments="x:String" Name="outHospPayerInsType" />
      <Variable x:TypeArguments="x:String" Name="outHospPayerNote" />
      <Variable x:TypeArguments="x:String" Name="outAddPayerName" />
      <Variable x:TypeArguments="x:String" Name="outAddPayerMemID" />
      <Variable x:TypeArguments="x:String" Name="outAddPayerInsType" />
      <Variable x:TypeArguments="x:String" Name="out_DownloadPath" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">340,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <av:PointCollection x:Key="ConnectorLocation">370,77.7 370,127.7</av:PointCollection>
        <x:Double x:Key="Width">990</x:Double>
        <x:Double x:Key="Height">746.04</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">270,127.7</av:Point>
          <av:Size x:Key="ShapeSize">200,81</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">370,208.7 370,283.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Getting Availity Details" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[in_dtLogin.Select(&quot;[Application]='Availity'&quot;).Any()]" DisplayName="If in_dtLogin.Select(&quot;[Application]='Availity'&quot;).Any()" sap:VirtualizedContainerService.HintSize="337.6,52.8" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="476.79999999999995,374.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign dr_AvailityDetails" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataRow">[dr_AvailityDetails]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataRow">[in_dtLogin.Select("[Application]='Availity'")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="433.6,164" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[strAvailityUsername]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[dr_AvailityDetails("Username").ToString]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[strAvailityPassword]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[dr_AvailityDetails("Password").ToString]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[strAvailityURL]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[dr_AvailityDetails("Path or URL").ToString]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="400,180" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Throw DisplayName="Throw BusinessRuleException - Availity Login Details are not found." Exception="[New BusinessRuleException(&quot;Availity Login Details are not found. Chosen Process to Run : &quot;+in_ProcessRun)]" sap:VirtualizedContainerService.HintSize="356.8,90.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">270,283.6</av:Point>
              <av:Size x:Key="ShapeSize">200,52</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart DisplayName="Flowchart - Availity" sap:VirtualizedContainerService.HintSize="642,803" sap2010:WorkflowViewState.IdRef="Flowchart_2">
            <Flowchart.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Name="List_MissingClientInformation" />
              <Variable x:TypeArguments="x:Int32" Name="fileCounter" />
              <Variable x:TypeArguments="x:Boolean" Name="IsRemitPage" />
            </Flowchart.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,127.7</av:PointCollection>
                <x:Double x:Key="Height">765.5</x:Double>
                <x:Double x:Key="Width">608.0000000000001</x:Double>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID4</x:Reference>
            </Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,127.7</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,180.5 300,230.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Login_Availity workflow" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Modules\Login_Availity.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_URL">[strAvailityURL]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Username">[strAvailityUsername]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Password">[strAvailityPassword]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_RetryNumber">[CInt(in_Config("MaxRetryScopesRetryNumber").ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_DelayShort">[CInt(in_Config("DelayShort").ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="isTesting">[CBool(in_Config("IsTesting").ToString)]</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_TimeoutLong">[CInt(in_Config("TimeoutLong").ToString)]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,230.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,81</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,311.5 300,410.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Before Loop Setup Sequence" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_538">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign excelRowCount" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_358">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[excelRowCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_361">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_DownloadPath]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_Config("Output FilePath").ToString+DateTime.Now.ToString("yyyy")+"\"+DateTime.Now.ToString("MMM")+"\"+DateTime.Now.ToString("dd-MM-yyyy")+"\"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[out_DownloadPath]" />
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID0">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">200,410.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,52</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300,463.3 300,591.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dtRecords]" DisplayName="For Each Row in Client List" sap:VirtualizedContainerService.HintSize="876,7041" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="842,6924" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="strInputPayer" />
                                <Variable x:TypeArguments="sd:DataTable" Name="dtRemits" />
                                <Variable x:TypeArguments="x:String" Name="clientShortName" />
                                <Variable x:TypeArguments="x:String" Name="payerShortName" />
                                <Variable x:TypeArguments="x:String" Name="ToLandingLocation" />
                                <Variable x:TypeArguments="x:String" Name="ToCorrespondenceLocation" />
                                <Variable x:TypeArguments="x:String" Name="ToRemitsCheckLocation" />
                                <Variable x:TypeArguments="x:String" Name="strFilePathPDF" />
                                <Variable x:TypeArguments="x:String" Name="strFilePath5010" />
                                <Variable x:TypeArguments="x:String" Name="strWebfilesPDF" />
                                <Variable x:TypeArguments="x:String" Name="outPathWebFiles" />
                                <Variable x:TypeArguments="x:Boolean" Name="IsDownloadPDF" />
                                <Variable x:TypeArguments="x:Boolean" Name="IsDownload5010" />
                                <Variable x:TypeArguments="x:Int32" Name="DelayShort" />
                                <Variable x:TypeArguments="x:Int32" Name="DelayCustom" />
                                <Variable x:TypeArguments="x:String" Name="NPI" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="780,82" sap2010:WorkflowViewState.IdRef="Assign_363">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_DownloadPath]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[in_Config("Output FilePath").ToString+DateTime.Now.ToString("yyyy")+"\"+DateTime.Now.ToString("MMM")+"\"+DateTime.Now.ToString("dd-MM-yyyy")+"\"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="780,82" sap2010:WorkflowViewState.IdRef="Assign_353">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[excelRowCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[excelRowCount+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign intRetryCounter" sap:VirtualizedContainerService.HintSize="780,82" sap2010:WorkflowViewState.IdRef="Assign_322">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intRetryCounter]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[String.IsNullOrEmpty(CurrentRow(&quot;BOT_Status&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="780,6447" sap2010:WorkflowViewState.IdRef="If_152">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="702,6171" sap2010:WorkflowViewState.IdRef="Sequence_536">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="BOT_Status" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign boolExitLoop" sap:VirtualizedContainerService.HintSize="640,82" sap2010:WorkflowViewState.IdRef="Assign_323">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[boolExitLoop]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[boolExitLoop=False]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="640,2958" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_20">
                                      <ui:InterruptibleDoWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="604,2792" sap2010:WorkflowViewState.IdRef="Sequence_534">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Boolean" Name="LoopBreak" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="542,52" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outStatus]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outDOB]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outGender]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outSubID]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outGrpNum]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outPtName]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outAddress]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outRelatSub]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outSub]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outInsType]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outInsStatus]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outAddPayerName]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outAddPayerInsType]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outAddPayerMemID]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outContPayer]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outContPayerInsType]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outContMemID]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outContPayerNote]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outHospPayerInsType]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[outHospPayerNote]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">-</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:MultipleAssign>
                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="542,2589" sap2010:WorkflowViewState.IdRef="TryCatch_38">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <Sequence sap:VirtualizedContainerService.HintSize="504,2337" sap2010:WorkflowViewState.IdRef="Sequence_529">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayBefore="1000" DelayMS="4000" DisplayName="Click 'Refresh'" sap:VirtualizedContainerService.HintSize="441.6,107.2" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                  <ui:Click.CursorPosition>
                                                    <ui:CursorPosition Position="Center">
                                                      <ui:CursorPosition.OffsetX>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetX>
                                                      <ui:CursorPosition.OffsetY>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetY>
                                                    </ui:CursorPosition>
                                                  </ui:Click.CursorPosition>
                                                  <ui:Click.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3d6b55dc-27d6-43a9-b019-826692873314" InformativeScreenshot="052102e288150b12f4faf8ec1ad03497" Selector="&lt;html app='chrome.exe' title='*Availity*' /&gt;&lt;webctrl id='app-content' tag='IFRAME' /&gt;&lt;webctrl parentid='btnCoveragesRefresh' tag='SPAN' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
                                                  </ui:Click.Target>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:Click>
                                                <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="442,465" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:03">
                                                  <ui:RetryScope.ActivityBody>
                                                    <ActivityAction>
                                                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="400,218" sap2010:WorkflowViewState.IdRef="Sequence_541">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click New Search" sap:VirtualizedContainerService.HintSize="338,107" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                          <ui:Click.CursorPosition>
                                                            <ui:CursorPosition Position="Center">
                                                              <ui:CursorPosition.OffsetX>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:CursorPosition.OffsetX>
                                                              <ui:CursorPosition.OffsetY>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:CursorPosition.OffsetY>
                                                            </ui:CursorPosition>
                                                          </ui:Click.CursorPosition>
                                                          <ui:Click.Target>
                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="37894bc1-d534-4a5a-a5d8-477c72909da3" InformativeScreenshot="e7452c74aef90f76582ae4f9dfdcb70b" Selector="&lt;html app='chrome.exe' title='*Availity*' /&gt;&lt;webctrl id='app-content' tag='IFRAME' /&gt;&lt;webctrl id='btnNewRequest' tag='DIV' /&gt;" WaitForReady="COMPLETE">
                                                              <ui:Target.TimeoutMS>
                                                                <InArgument x:TypeArguments="x:Int32" />
                                                              </ui:Target.TimeoutMS>
                                                            </ui:Target>
                                                          </ui:Click.Target>
                                                        </ui:Click>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:RetryScope.ActivityBody>
                                                  <ui:RetryScope.Condition>
                                                    <ActivityFunc x:TypeArguments="x:Boolean">
                                                      <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                                                        <ui:UiElementExists.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4e94258b-722d-4499-ae3b-835c2e48ec56" Selector="&lt;html app='chrome.exe' title='*Availity*' /&gt;&lt;webctrl id='app-content' tag='IFRAME' /&gt;&lt;webctrl aaname='Please Select a Payer' tag='SPAN' /&gt;">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:UiElementExists.Target>
                                                      </ui:UiElementExists>
                                                    </ActivityFunc>
                                                  </ui:RetryScope.Condition>
                                                </ui:RetryScope>
                                                <Assign DisplayName="Assign NPI" sap:VirtualizedContainerService.HintSize="442,82" sap2010:WorkflowViewState.IdRef="Assign_324">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[NPI]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[CurrentRow("NPI").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If Condition="[string.IsNullOrEmpty(NPI)]" DisplayName="If NPI=&quot;&quot;" sap:VirtualizedContainerService.HintSize="442,52" sap2010:WorkflowViewState.IdRef="If_145">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_501">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[&quot;NPI field cannot be empty since it is an mandatory field on webportal&quot;]">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:LogMessage>
                                                      <Throw DisplayName="Throw BusinessRuleException(&quot;NPI field cannot be empty since it is an mandatory field on webportal&quot;)" Exception="[New BusinessRuleException(&quot;NPI field cannot be empty since it is an mandatory field on webportal&quot;)]" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="Throw_14" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_502">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                                <Assign DisplayName="Assign strInputPayer" sap:VirtualizedContainerService.HintSize="442,82" sap2010:WorkflowViewState.IdRef="Assign_325">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strInputPayer]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign strInputPayer" sap:VirtualizedContainerService.HintSize="442,82" sap2010:WorkflowViewState.IdRef="Assign_326">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strInputPayer]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[CurrentRow("Payer").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If Condition="[in_PayorMapping.Select(&quot;[Payer Names]='&quot;+strInputPayer+&quot;'&quot;).Any()]" sap:VirtualizedContainerService.HintSize="442,52" sap2010:WorkflowViewState.IdRef="If_146">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="496,315" sap2010:WorkflowViewState.IdRef="Sequence_503">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign DisplayName="Assign drClientDetails" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_327">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="sd:DataRow">[drClientDetails]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="sd:DataRow">[in_PayorMapping.Select("[Payer Names]='"+strInputPayer+"'")(0)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Assign getSearchCriteria" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_328">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[getSearchCriteria]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[drClientDetails("Search Parameters").ToString]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_504">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error" Message="[strInputPayer+&quot; is missing on payer mapping file&quot;]">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:LogMessage>
                                                      <Throw DisplayName="Throw BusinessRuleException(strInputPayer+&quot; is missing on payer mapping file&quot;)" Exception="[New BusinessRuleException(strInputPayer+&quot; is missing on payer mapping file&quot;)]" sap:VirtualizedContainerService.HintSize="338,90" sap2010:WorkflowViewState.IdRef="Throw_15" />
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                                <Assign sap:VirtualizedContainerService.HintSize="442,82" sap2010:WorkflowViewState.IdRef="Assign_362">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[out_DownloadPath]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[out_DownloadPath+CurrentRow("Run#").ToString.Replace(":","_")+".pdf"]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Delete ResourceFile="{x:Null}" ContinueOnError="True" DisplayName="Delete if any before" sap:VirtualizedContainerService.HintSize="442,52" sap2010:WorkflowViewState.IdRef="Delete_8" Path="[out_DownloadPath]">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:Delete>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Modules\Search_Criteria.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="442,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_122" UnSafe="False" WorkflowFileName="Modules\Search_Criteria.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_PayerName">[CurrentRow("Payer").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_PatientFirstName">[CurrentRow("First Name").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_PatientLastName">[CurrentRow("Last Name").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_DOB">[CurrentRow("DOB").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_DOS">[CurrentRow("DOS").ToString]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_NPI">[NPI]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_SearchCriteria">[getSearchCriteria]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_PatientID">[CurrentRow("Member ID").ToString]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Modules\Details_to_Extract.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="442,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_127" UnSafe="False" WorkflowFileName="Modules\Details_to_Extract.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strSubscriberID">[outSubID]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strGroupNumber">[outGrpNum]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strStatus">[outStatus]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strDOB">[outDOB]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strGender">[outGender]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strAddress">[outAddress]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strSubscriber">[outSub]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strRelationtoSubscriber">[outRelatSub]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strPatientName">[outPtName]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strInsuranceType">[outInsType]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="strInsuranceStatus">[outInsStatus]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="contactPayer">[outContPayer]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="contactPayerInsType">[outContPayerInsType]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="contactMemberID">[outContMemID]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="contactPayerNote">[outContPayerNote]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="hospicePayerInsType">[outHospPayerInsType]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="hospicePayerNote">[outHospPayerNote]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="additionalPayerName">[outAddPayerName]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="additionalPayerMemberID">[outAddPayerMemID]</OutArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="additionalPayerInsType">[outAddPayerInsType]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Modules\Print_Report.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="442,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_128" UnSafe="False" WorkflowFileName="Modules\Print_Report.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InOutArgument x:TypeArguments="x:String" x:Key="out_DownloadPath">[out_DownloadPath]</InOutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <Assign DisplayName="Assign boolExitLoop" sap:VirtualizedContainerService.HintSize="441.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_347">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[boolExitLoop]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign BOT_Status" sap:VirtualizedContainerService.HintSize="441.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_357">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[BOT_Status]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">Success</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="4000" DisplayName="Click 'Refresh'" sap:VirtualizedContainerService.HintSize="441.6,107.2" sap2010:WorkflowViewState.IdRef="Click_17" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                  <ui:Click.CursorPosition>
                                                    <ui:CursorPosition Position="Center">
                                                      <ui:CursorPosition.OffsetX>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetX>
                                                      <ui:CursorPosition.OffsetY>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:CursorPosition.OffsetY>
                                                    </ui:CursorPosition>
                                                  </ui:Click.CursorPosition>
                                                  <ui:Click.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3d6b55dc-27d6-43a9-b019-826692873314" InformativeScreenshot="052102e288150b12f4faf8ec1ad03497" Selector="&lt;html app='chrome.exe' title='*Availity*' /&gt;&lt;webctrl id='app-content' tag='IFRAME' /&gt;&lt;webctrl parentid='btnCoveragesRefresh' tag='SPAN' /&gt;">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:Click.Target>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:Click>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="488,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_45">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="600.8,1363.2" sap2010:WorkflowViewState.IdRef="Sequence_532">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign intRetryCounter" sap:VirtualizedContainerService.HintSize="554.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_348">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[intRetryCounter]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[intRetryCounter+1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="554.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Error" Message="[&quot;Exception : &quot;+exception.Source.ToString+&quot; - &quot;+exception.Message.ToString]" />
                                                    <If Condition="[intRetryCounter&lt;=CInt(in_Config(&quot;MaxProcessXamlRetryNumber&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="554.4,1019.2" sap2010:WorkflowViewState.IdRef="If_144">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,548" sap2010:WorkflowViewState.IdRef="Sequence_530">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign boolExitLoop" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_349">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">[boolExitLoop]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_37">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <TryCatch.Try>
                                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Modules\Logout_Availity.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_123" UnSafe="False" WorkflowFileName="Modules\Logout_Availity.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                            </TryCatch.Try>
                                                            <TryCatch.Catches>
                                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_44">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                  </ActivityAction.Argument>
                                                                  <ui:KillProcess Process="{x:Null}" AppliesTo="OnlyCurrentDesktop" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334.4,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="CHROME" />
                                                                </ActivityAction>
                                                              </Catch>
                                                            </TryCatch.Catches>
                                                          </TryCatch>
                                                          <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Login_Availity workflow" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_124" UnSafe="False" WorkflowFileName="Modules\Login_Availity.xaml">
                                                            <ui:InvokeWorkflowFile.Arguments>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_URL">[strAvailityURL]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_Username">[strAvailityUsername]</InArgument>
                                                              <InArgument x:TypeArguments="x:String" x:Key="in_Password">[strAvailityPassword]</InArgument>
                                                              <InArgument x:TypeArguments="x:Int32" x:Key="in_RetryNumber">[CInt(in_Config("MaxRetryScopesRetryNumber").ToString)]</InArgument>
                                                              <InArgument x:TypeArguments="x:Int32" x:Key="in_DelayShort">[CInt(in_Config("DelayShort").ToString)]</InArgument>
                                                              <InArgument x:TypeArguments="x:Boolean" x:Key="isTesting">[CBool(in_Config("IsTesting").ToString)]</InArgument>
                                                              <InArgument x:TypeArguments="x:Int32" x:Key="in_TimeoutLong">[CInt(in_Config("TimeoutLong").ToString)]</InArgument>
                                                            </ui:InvokeWorkflowFile.Arguments>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:InvokeWorkflowFile>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,292.8" sap2010:WorkflowViewState.IdRef="Sequence_531">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign boolExitLoop" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_350">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">[boolExitLoop]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign DisplayName="Assign BOT_Status" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_355">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[BOT_Status]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">["System Exception - "+exception.Message.ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </ActivityAction>
                                              </Catch>
                                              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="488,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_46">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="476.8,412" sap2010:WorkflowViewState.IdRef="Sequence_533">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign boolExitLoop" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_351">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[boolExitLoop]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign BOT_Status" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_356">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[BOT_Status]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">["Business Exception - "+exception.Message.ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_364">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[outStatus]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[exception.Message.ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </Sequence>
                                      </ui:InterruptibleDoWhile.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleDoWhile>
                                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="600,2940" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_OutputFileName]">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,2830.4" sap2010:WorkflowViewState.IdRef="Sequence_535">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelWriteCell Cell="[&quot;AE&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sheet1" Text="[BOT_Status]" />
                                            <If Condition="[BOT_Status=&quot;Success&quot;]" sap:VirtualizedContainerService.HintSize="356.8,52.8" sap2010:WorkflowViewState.IdRef="If_153">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,177.6" sap2010:WorkflowViewState.IdRef="Sequence_539">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelWriteCell Cell="[&quot;AF&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="Sheet1" Text="[&quot;\\&quot;+out_DownloadPath]" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,177.6" sap2010:WorkflowViewState.IdRef="Sequence_540">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelWriteCell Cell="[&quot;AF&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="Sheet1" Text="-" />
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <ui:ExcelWriteCell Cell="[&quot;K&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Sheet1" Text="[outStatus]" />
                                            <ui:ExcelWriteCell Cell="[&quot;L&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="[outDOB]" />
                                            <ui:ExcelWriteCell Cell="[&quot;M&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet1" Text="[outGender]" />
                                            <ui:ExcelWriteCell Cell="[&quot;N&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet1" Text="[outSubID]" />
                                            <ui:ExcelWriteCell Cell="[&quot;O&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Sheet1" Text="[outGrpNum]" />
                                            <ui:ExcelWriteCell Cell="[&quot;P&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Sheet1" Text="[outPtName]" />
                                            <ui:ExcelWriteCell Cell="[&quot;Q&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Sheet1" Text="[outAddress]" />
                                            <ui:ExcelWriteCell Cell="[&quot;R&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Sheet1" Text="[outRelatSub]" />
                                            <ui:ExcelWriteCell Cell="[&quot;S&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Sheet1" Text="[outSub]" />
                                            <ui:ExcelWriteCell Cell="[&quot;T&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Sheet1" Text="[outInsType]" />
                                            <ui:ExcelWriteCell Cell="[&quot;U&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Sheet1" Text="[outInsStatus]" />
                                            <ui:ExcelWriteCell Cell="[&quot;V&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Sheet1" Text="[outAddPayerName]" />
                                            <ui:ExcelWriteCell Cell="[&quot;W&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Sheet1" Text="[outAddPayerInsType]" />
                                            <ui:ExcelWriteCell Cell="[&quot;X&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Sheet1" Text="[outAddPayerMemID]" />
                                            <ui:ExcelWriteCell Cell="[&quot;Y&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="Sheet1" Text="[outContPayer]" />
                                            <ui:ExcelWriteCell Cell="[&quot;Z&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="Sheet1" Text="[outContPayerInsType]" />
                                            <ui:ExcelWriteCell Cell="[&quot;AA&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="Sheet1" Text="[outContMemID]" />
                                            <ui:ExcelWriteCell Cell="[&quot;AB&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="Sheet1" Text="[outContPayerNote]" />
                                            <ui:ExcelWriteCell Cell="[&quot;AC&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="Sheet1" Text="[outHospPayerInsType]" />
                                            <ui:ExcelWriteCell Cell="[&quot;AD&quot;+excelRowCount.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="356.8,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="Sheet1" Text="[outHospPayerNote]" />
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="400,82.4" sap2010:WorkflowViewState.IdRef="Sequence_537">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,591.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">300,644.3 300,712.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Modules\Logout_Availity.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Modules\Logout_Availity.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:KillProcess Process="{x:Null}" AppliesTo="OnlyCurrentDesktop" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334.4,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="CHROME" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">200,712.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Availity Eligibility Process Completed @ &quot;+now.tostring]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:MessageBox>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID2</x:Reference>
            <x:Reference>__ReferenceID3</x:Reference>
          </Flowchart>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>